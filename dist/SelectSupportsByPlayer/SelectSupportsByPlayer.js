// ==UserScript==
// @name         Select supports by player
// @namespace    https://github.com/LegendaryB/tw-userscripts
// @version      0.1
// @author       LegendaryB
// @include		 https://de*.die-staemme.de/game.php*screen=place*&mode=units*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=die-staemme.de
// @grant        none
// ==/UserScript==

(()=>{"use strict";var e,t,n,l,s;e||(e={}),function(e){e[e.Unit=0]="Unit",e[e.Building=1]="Building"}(t||(t={})),function(e){e[e.Spear=0]="Spear",e[e.Sword=1]="Sword",e[e.Axe=2]="Axe",e[e.Spy=3]="Spy",e[e.Light=4]="Light",e[e.Heavy=5]="Heavy",e[e.Ram=6]="Ram",e[e.Catapult=7]="Catapult",e[e.Snob=8]="Snob",e[e.Knight=9]="Knight"}(n||(n={}));class a{static getBuildingIcon(n){let l=e[n].toString();return this.getIcon(l,t.Unit)}static getUnitIcon(e){let l=n[e].toLowerCase();return this.getIcon(`unit_${l}`,t.Unit)}static getIcon(e,t){return`${window.location.origin}/${this.iconAssetTypeToPathMap.get(t)}/${e}.png`}}l=a,a.iconAssetTypeToPathMap=new Map,a.basePath="/graphic",l.iconAssetTypeToPathMap.set(t.Building,`${l.basePath}/buildings`),l.iconAssetTypeToPathMap.set(t.Unit,`${l.basePath}/unit`);class o{static getDefenceTable(){return document.getElementById("units_home")}static getDefenceTableRows(){const e=this.getDefenceTableRowElements();let t=[];for(const n of e){const e=this.getDefenceTableRowData(n);t.push({element:n,data:e})}return t}static getDefenceTableRowData(e){let t=new Map,n=Array.from(e.querySelectorAll(".unit-item"));for(const e of n){let n=this.getUnitName(e),l=Number(e.innerText);t.set(n,l)}return{source:e.cells[1].innerText,playerName:this.getPlayerName(e),distance:Number(e.cells[2].innerText),units:t}}static getDefenceTableRowElements(){let e=this.getDefenceTable(),t=Array.from(e.querySelectorAll("input[type=checkbox]:not(.selectAll)")),n=[];for(const e of t){let t=e.closest("tr");null!==t&&n.push(t)}return n}static getUnitName(e){const t="unit-item-";let n=Array.from(e.classList);for(const e of n)if(-1!=e.indexOf(t)){let n=e;return n=n.replace(t,""),n=this.toUpperCaseAt(n,0),n}return null}static getPlayerName(e){return e.cells[1].innerText.match(/\(([^()]*)\)/g)[0].replace("(","").replace(")","")}static toUpperCaseAt(e,t){return e.substring(0,t)+e.charAt(t).toUpperCase()+e.substring(t+1)}}!function(e){e[e.Info=0]="Info",e[e.Success=1]="Success",e[e.Error=2]="Error"}(s||(s={}));class r{static showInfoMessage(e){this.showMessage(e,s.Info)}static showSuccessMessage(e){this.showMessage(e,s.Success)}static showErrorMessage(e){this.showMessage(e,s.Error)}static showMessage(e,t){switch(t){case s.Info:window.UI.InfoMessage(e);break;case s.Success:window.UI.SuccessMessage(e);break;case s.Error:window.UI.ErrorMessage(e)}}}const i=e=>{let t=document.createElement("template");return t.innerHTML=e.trim(),t.content.firstChild},c="SelectSupportsByPlayer",u=`${c}_playerNameSelection`,p=`${c}_filterTable`,d=`${c}_applyFilterBtn`,h=`${c}_filterRow_%UNIT%`,g=`${h}_Operand`,f=`${h}_Value`,y=`\n        <div>\n            <div>\n                <h4 style="font-style: normal;">Unterstützungen eines Spielers auswählen</h4>\n                <div id="${u}"></div>\n            </div>\n\n            <div>\n                <div style="margin: 16px 0px 16px 0px;">\n                    <table id="${p}">\n                        <tbody>\n                            <tr id="${c}_filterTableHeader">\n                                <th colspan="2">Filter</th>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <table align="left">\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <input id="${d}" class="btn" type="submit" value="Filter anwenden">\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n        </div>`,m=`\n        <tr id="%UNIT%">\n            <td>\n                <label>\n                    <input type="checkbox">\n                    %UNIT%\n                </label>\n            </td>\n            <td>\n                <select id="${g}">\n                    <option value=">">&gt;</option>\n                    <option value="<">&lt;</option>\n                    <option value="=">=</option>\n                    <option value=">=">>=</option>\n                    <option value="<="><=</option>\n                    <option value="!=">!=</option>\n                </select>\n                <input id="${f}" type="number"> \n            </td>\n        </tr>\n`,b=e=>{let t=i('<a style="cursor: pointer;" target="_self"></a>');return t.innerText=e,t};class w{}const T=e=>{let t=new w;t.Unit=e.id;let n=e.querySelector(`#${g.replace("%UNIT%",t.Unit)}`),l=e.querySelector(`#${f.replace("%UNIT%",t.Unit)}`);return t.Operand=n.value,t.Value=Number(l.value),t},S={"<":(e,t)=>e<t,">":(e,t)=>e>t,"=":(e,t)=>e==t,">=":(e,t)=>e>=t,"<=":(e,t)=>e<=t,"!=":(e,t)=>e!=t},I=(e,t)=>{document.getElementById("content_value").querySelector("h3").after(i(y)),((e,t)=>{const n=document.getElementById(u);let l=[];for(let s=0;s<e.length;s++){let a=e[s],o=a.data.playerName;if(l.includes(o))continue;let r=b(o);if(r.onclick=()=>t(a),l.push(a.data.playerName),n.appendChild(r),s==e.length-1)continue;let i=document.createElement("span");i.innerText=" - ",n.appendChild(i)}})(e,t),(e=>{let t=document.getElementById(p).querySelector("tbody");for(const n of e[0].data.units.keys()){let e=m.replaceAll("%UNIT%",n),l=i(e);t.appendChild(l)}document.getElementById(d).onclick=()=>(()=>{let e=(()=>{let e=document.getElementById(p),t=Array.from(e.querySelectorAll('input[type="checkbox"]:checked')).map((e=>e.closest("tr"))),n=[];for(const e of t){let t=T(e);n.push(t)}return n})(),t=o.getDefenceTableRows();(e=>{for(const t of e)"none"==t.element.style.display&&(t.element.style.display="")})(t);for(const n of t)for(const t of e)(0,S[t.Operand])(n.data.units.get(t.Unit),t.Value)||(n.element.style.display="none")})()})(e)};(()=>{const e=(e,t)=>{let n=`Selected all supports of player '${e}'!`;for(const l of t){let t=l.element.firstElementChild.firstElementChild;l.data.playerName==e?(t.checked=!t.checked,t.checked||(n=`Deselected all supports of player '${e}'!`)):t.checked=!1}r.showSuccessMessage(n)};let t=o.getDefenceTableRows();0!=t.length&&I(t,(n=>e(n.data.playerName,t)))})()})();